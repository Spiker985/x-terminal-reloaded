/*
 * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * Copyright 2017-2018 Andres Mejia <amejia004@gmail.com>. All Rights Reserved.
 * Copyright (c) 2020 UziTech All Rights Reserved.
 * Copyright (c) 2020 bus-stop All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this
 * software and associated documentation files (the "Software"), to deal in the Software
 * without restriction, including without limitation the rights to use, copy, modify,
 * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
// The ui-variables file is provided by whatever theme is selected by the
// user at runtime. See also
// https://flight-manual.atom.io/hacking-atom/sections/creating-a-theme/#creating-a-ui-theme .
@import url("ui-variables");
@import url("octicon-utf-codes");
@import url("octicon-mixins");
@import url("syntax-variables");

@profile-menu-background-color: lighten(@app-background-color, 2%);
@component-size: @component-icon-size; // use for text-less controls like radio, checkboxes etc.
@component-background-color: mix(@text-color, @base-background-color, 20%);
@btn-border: 1px solid @button-border-color;
@ui-size: 1em;
@btn-padding: 0 @ui-size/1.25;
@accent-luma: luma( hsl(@ui-hue, 50%, 50%) ); // get lightness of current hue
@accent-color: mix( hsv( @ui-hue, 100%, 66%), hsl( @ui-hue, 100%, 70%), @accent-luma );
@ui-syntax-color: @syntax-background-color;
@ui-s-h: hue(@ui-syntax-color);
.ui-hue() when (@ui-s-h = 0) { @ui-hue: 220; } // Use blue hue when no saturation
.ui-hue() when (@ui-s-h > 0) { @ui-hue: @ui-s-h; }
.ui-hue();

:root {
	--standard-app-background-color: @app-background-color;
	--standard-text-color: @text-color;
	--standard-background-color-selected: @background-color-selected;
	--standard-text-color-highlight: @text-color-highlight;
}

x-terminal-reloaded {
	display: flex;
	flex-direction: column;
}

x-terminal-reloaded-profile {
	width: 100%;
	height: 100%;
	position: absolute;
	top: 0;
	left: 0;
	flex: auto;
	color: @text-color;
	background-color: @app-background-color;
	overflow: auto;
	visibility: hidden;
	display: grid;
	grid-template-columns: (@component-padding * 5) auto (@component-padding * 5); /* stylelint-disable-line declaration-property-value-no-unknown */
	grid-template-rows: (@component-padding * 5) auto (@component-padding * 5); /* stylelint-disable-line declaration-property-value-no-unknown */
	grid-template-areas: "top top top" "left main right" "bottom bottom bottom";
}

.x-terminal-reloaded-restart-btn {
	margin-left: @component-padding;
	margin-right: @component-padding;
}

.x-terminal-reloaded-main-div {
	height: 95%;
	width: auto;
	flex: auto;
}

.x-terminal-reloaded-profile-menu-element-top-div {
	grid-area: top;
}

.x-terminal-reloaded-profile-menu-element-bottom-div {
	grid-area: bottom;
}

.x-terminal-reloaded-profile-menu-element-left-div {
	grid-area: left;
}

.x-terminal-reloaded-profile-menu-element-right-div {
	grid-area: right;
}

.x-terminal-reloaded-profile-menu-element-main-div {
	grid-area: main;
	padding: @component-padding * 5;
	border-radius: @component-border-radius * 2;
	border: @btn-border;
	background-color: @profile-menu-background-color;
	margin: -35px;
}

.x-terminal-reloaded-profile-menu-element-hline {
	width: 100%;
	color: @base-border-color;
	line-height: 2px;
	background-color: @base-border-color;
	margin-top: 20px;
	margin-bottom: 10px;
}

.x-terminal-reloaded-profile-menu-item {
	padding: 0.8em 0;
	overflow: auto;
}

.x-terminal-reloaded-profile-menu-item-label {
	user-select: none;
	cursor: default;
	display: block;
	max-width: 100%;
	margin-bottom: 5px;
	background-color: @profile-menu-background-color;
	margin-left: 2px;
}

.x-terminal-reloaded-profile-menu-item-label-checkbox {
	padding-left: 2.2em;
	margin-top: -20px;

	.x-terminal-reloaded-profile-menu-item-checkbox {
		margin-left: -2.2em;
		vertical-align: bottom;
		position: relative;
		top: 20px;
	}
}

.x-terminal-reloaded-profile-menu-item-description-checkbox {
	padding-left: 2.25em;
	margin-left: 2px;
	margin-top: -0.5em;
}

.x-terminal-reloaded-profile-menu-item-title {
	font-size: @font-size + 4px;
	user-select: none;
	color: @text-color;
}

.x-terminal-reloaded-profile-menu-item-description {
	color: @text-color-subtle;
	user-select: none;
	cursor: default;

	&:empty {
		display: none;
	}

	p {
		margin-bottom: 0;
	}

	a {
		color: @accent-color;
	}
}

.x-terminal-reloaded-profile-menu-item-select {
	color: @text-color;
	border-color: @button-border-color;
	border-radius: @component-border-radius;
	background-color: @button-background-color;
	height: 2em;
	width: 100%;
	font-size: 1.25em;
	padding-top: 0;
	padding-bottom: 0;
	padding-left: @component-padding;

	&:focus,
	&:hover {
		box-shadow: none;
		background-color: @button-background-color-hover;
	}
}

.x-terminal-reloaded-profile-menu-item-label-color {
	padding-left: 5em;
	margin-top: -20px;

	.x-terminal-reloaded-profile-menu-item-color {
		border-color: @button-border-color;
		background-color: @button-background-color;
		width: 4em;
		height: 1.6em;
		margin-left: -5em;
		padding: 0;
		vertical-align: bottom;
		position: relative;
		left: -2px;
		top: 22px;

		&::-webkit-color-swatch-wrapper {
			padding: 2px;
			margin: 0;
			border-radius: inherit;
		}

		&::-webkit-color-swatch {
			border-radius: @component-border-radius;
			border: 1px solid hsla(0, 0%, 0%, 0.1); /* stylelint-disable-line */
		}

		&:hover {
			box-shadow: none;
			background-color: @button-background-color-hover;
		}

		&:focus {
			background-color: @button-background-color-hover;
			border-color: @accent-color;
			border-radius: @component-border-radius;
		}
	}
}

.x-terminal-reloaded-profile-menu-item-description-color {
	padding-left: 5em;
	margin-left: 2px;
	margin-top: -0.5em;
}

.x-terminal-reloaded-profile-menu-buttons-div {
	padding-top: 1em;
}

.x-terminal-reloaded-modal-button,
.x-terminal-reloaded-profile-menu-button {
	height: @component-line-height + 2px;
	padding: @btn-padding;
	font-size: @font-size + 2px;
	border: @btn-border;
	border-radius: @component-border-radius;
	background-color: @button-background-color;

	&.btn-load {
		&::before {
			content: @settings;
			.octicon-font();
			margin-right: @component-padding;
		}
	}

	&.btn-save {
		&::before {
			content: @file;
			.octicon-font();
			margin-right: @component-padding;
		}
	}

	&.btn-delete {
		&::before {
			content: @trashcan;
			.octicon-font();
			margin-right: @component-padding;
		}
	}

	&.btn-restart {
		&::before {
			content: @terminal;
			.octicon-font();
			margin-right: @component-padding;
		}
	}

	&.btn-hide {
		&::before {
			content: @sign-out;
			.octicon-font();
			margin-right: @component-padding;
		}

		&:hover {
			background-color: @button-background-color-hover;
			color: lighten(@text-color, 20%); /* stylelint-disable-line declaration-property-value-no-unknown */
		}

		&:focus {
			background-color: @button-background-color-hover;
			color: lighten(@text-color, 20%); /* stylelint-disable-line declaration-property-value-no-unknown */
			border-color: @accent-color;
		}
	}
}

.x-terminal-reloaded-modal-message {
	font-size: @font-size + 4px;
	margin-top: 0.6em;

	&::before {
		content: @arrow-right;
		.octicon-font();
		margin-right: @component-padding;
	}
}

.x-terminal-reloaded-term-container {
	height: 100%;
	width: 100%;
	flex: auto;
}

.x-terminal-reloaded-notice-type(@tx; @bg) {
	@x-terminal-reloaded-notice-background-color: mix(@bg, @base-background-color, 10%);
	color: contrast(@x-terminal-reloaded-notice-background-color, darken(@tx, 20%), lighten(@tx, 20%)); /* stylelint-disable-line declaration-property-value-no-unknown */
	border-color: lighten(@x-terminal-reloaded-notice-background-color, 10%); /* stylelint-disable-line declaration-property-value-no-unknown */
	background-color: @x-terminal-reloaded-notice-background-color;
	border-style: solid;
	font-size: @input-font-size;
	height: 100%;
	width: 100%;
	flex: none;

	.x-terminal-reloaded-link {
		color: @accent-color;
		text-decoration: underline;
	}
}

.x-terminal-reloaded-notice-info {
	.x-terminal-reloaded-notice-type(@text-color-info; @background-color-info);
}

.x-terminal-reloaded-notice-success {
	.x-terminal-reloaded-notice-type(@text-color-success; @background-color-success);
}

.x-terminal-reloaded-notice-warning {
	.x-terminal-reloaded-notice-type(@text-color-warning; @background-color-warning);
}

.x-terminal-reloaded-notice-error {
	.x-terminal-reloaded-notice-type(@text-color-error; @background-color-error);
}
// Load the static styles here.
/* stylelint-disable-next-line */
@import (less) "../node_modules/@xterm/xterm/css/xterm.css";
